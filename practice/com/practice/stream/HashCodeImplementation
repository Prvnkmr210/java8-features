package com.practice.stream;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;

public class HashCodeImplementation {

	public static void main(String[] args) throws Exception {
		List<Employee> list = new ArrayList<>();
		
		Employee e1 = new Employee("101", "e1", 40000);
		Employee e2 = new Employee("102", "e2", 45000);
		Employee e5 = new Employee("102", "e2", 45000);
		Employee e3 = new Employee("103", "e3");
		Employee e4 = new Employee("104", "e4", 35000);
		
		list.add(e1);
		list.add(e2);
		list.add(e3);
		list.add(e4);
		list.add(e5);
		
		System.out.println(e2.equals(e5));

		Set<Employee> empSet = new HashSet<>();
		System.out.println(list.stream().filter(e -> !empSet.add(e)).collect(Collectors.toList()));
	}	
}

class Employee{
	private String id;
	private String name;
	private int salary;
	
	public Employee(String id, String name, int salary) {
		this.id = id;
		this.name = name;
		this.salary = salary;
	}
	
	public Employee(String id, String name) {
		this.id = id;
		this.name = name;
	}
	
	public String getId() {
		return id;
	}
	public String getName() {
		return name;
	}
	public int getSalary() {
		return salary;
	}
	
	

	public void setId(String id) {
		this.id = id;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setSalary(int salary) {
		this.salary = salary;
	}
	
		
	@Override
	public int hashCode() {
		return Objects.hash(id, name, salary);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Employee other = (Employee) obj;
		return Objects.equals(id, other.id) && Objects.equals(name, other.name) && salary == other.salary;
	}

	@Override
	public String toString() {
		return "Employee [id=" + id + ", name=" + name + ", salary=" + salary + "]";
	}	
	
}
